"use strict";(()=>{var e={};e.id=175,e.ids=[175],e.modules={8013:e=>{e.exports=require("mongodb")},2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2254:e=>{e.exports=require("node:buffer")},6005:e=>{e.exports=require("node:crypto")},7561:e=>{e.exports=require("node:fs")},8849:e=>{e.exports=require("node:http")},2286:e=>{e.exports=require("node:https")},7503:e=>{e.exports=require("node:net")},9411:e=>{e.exports=require("node:path")},7742:e=>{e.exports=require("node:process")},4492:e=>{e.exports=require("node:stream")},2477:e=>{e.exports=require("node:stream/web")},1041:e=>{e.exports=require("node:url")},7261:e=>{e.exports=require("node:util")},5628:e=>{e.exports=require("node:zlib")},7282:e=>{e.exports=require("process")},1267:e=>{e.exports=require("worker_threads")},6655:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>h,originalPathname:()=>f,patchFetch:()=>m,requestAsyncStorage:()=>x,routeModule:()=>c,serverHooks:()=>q,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>w});var o={};r.r(o),r.d(o,{GET:()=>p,POST:()=>l});var n=r(5419),s=r(9108),i=r(9678),a=r(8984),u=r(9600),d=r(8216);async function p(){try{let{userId:e}=(0,u.I)();if(console.log("Fetching notes for userId:",e),!e)return new a.NextResponse("Unauthorized",{status:401});let t=await (0,d.v)(),r=await t.collection("notes").find({userId:e}).sort({updatedAt:-1}).toArray();console.log("Found notes:",r.length),console.log("Notes data:",r.map(e=>({id:e._id.toString(),title:e.title})));let o=r.map(e=>({id:e._id.toString(),userId:e.userId,title:e.title,content:e.content,weather:e.weather,createdAt:e.createdAt,updatedAt:e.updatedAt}));return console.log("Transformed notes:",o.map(e=>({id:e.id,title:e.title}))),a.NextResponse.json(o)}catch(e){return console.error("Failed to fetch notes:",e),new a.NextResponse("Internal Server Error",{status:500})}}async function l(e){try{let{userId:t}=(0,u.I)();if(console.log("Creating note for userId:",t),!t)return new a.NextResponse("Unauthorized",{status:401});let r=await e.json();if(console.log("Note data received:",r),!r.title||!r.content)return new a.NextResponse("Title and content are required",{status:400});let o=await (0,d.v)(),n=new Date().toISOString(),s={userId:t,title:r.title,content:r.content,weather:r.weather,createdAt:n,updatedAt:n};console.log("Inserting note into database:",s);let i=await o.collection("notes").insertOne(s);console.log("Insert result:",i);let p={id:i.insertedId.toString(),...s};return console.log("Created note with ID:",p.id),a.NextResponse.json(p)}catch(e){return console.error("Failed to create note:",e),new a.NextResponse("Internal Server Error",{status:500})}}let c=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/notes/route",pathname:"/api/notes",filename:"route",bundlePath:"app/api/notes/route"},resolvedPagePath:"C:\\ai\\bnote\\src\\app\\api\\notes\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:x,staticGenerationAsyncStorage:g,serverHooks:q,headerHooks:h,staticGenerationBailout:w}=c,f="/api/notes/route";function m(){return(0,i.patchFetch)({serverHooks:q,staticGenerationAsyncStorage:g})}},5419:(e,t,r)=>{e.exports=r(517)},8216:(e,t,r)=>{let o;r.d(t,{v:()=>i});var n=r(8013);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let s=process.env.MONGODB_URI;async function i(){return(await o).db()}o=new n.MongoClient(s,{}).connect()}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[904],()=>r(6655));module.exports=o})();