"use strict";(()=>{var e={};e.id=866,e.ids=[866],e.modules={8013:e=>{e.exports=require("mongodb")},2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2254:e=>{e.exports=require("node:buffer")},6005:e=>{e.exports=require("node:crypto")},7561:e=>{e.exports=require("node:fs")},8849:e=>{e.exports=require("node:http")},2286:e=>{e.exports=require("node:https")},7503:e=>{e.exports=require("node:net")},9411:e=>{e.exports=require("node:path")},7742:e=>{e.exports=require("node:process")},4492:e=>{e.exports=require("node:stream")},2477:e=>{e.exports=require("node:stream/web")},1041:e=>{e.exports=require("node:url")},7261:e=>{e.exports=require("node:util")},5628:e=>{e.exports=require("node:zlib")},7282:e=>{e.exports=require("process")},1267:e=>{e.exports=require("worker_threads")},1874:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>j,originalPathname:()=>g,patchFetch:()=>m,requestAsyncStorage:()=>h,routeModule:()=>f,serverHooks:()=>w,staticGenerationAsyncStorage:()=>q,staticGenerationBailout:()=>R});var o={};r.r(o),r.d(o,{DELETE:()=>x,GET:()=>p,PUT:()=>l});var s=r(5419),n=r(9108),i=r(9678),a=r(8984),u=r(9600),d=r(8216),c=r(8013);async function p(e,{params:t}){try{let{userId:e}=(0,u.I)();if(!e)return a.NextResponse.json({success:!1,error:"Unauthorized"},{status:401});let r=await (0,d.v)(),o=await r.collection("notes").findOne({_id:new c.ObjectId(t.id),userId:e});if(!o)return a.NextResponse.json({success:!1,error:"Note not found"},{status:404});let s={id:o._id.toString(),userId:o.userId,title:o.title,content:o.content,weather:o.weather,createdAt:o.createdAt,updatedAt:o.updatedAt};return a.NextResponse.json(s)}catch(e){return console.error("Failed to fetch note:",e),a.NextResponse.json({success:!1,error:"Failed to fetch note"},{status:500})}}async function l(e,{params:t}){try{let{userId:r}=(0,u.I)();if(!r)return a.NextResponse.json({success:!1,error:"Unauthorized"},{status:401});let o=await e.json(),s=await (0,d.v)(),n=await s.collection("notes").findOneAndUpdate({_id:new c.ObjectId(t.id),userId:r},{$set:{...o,updatedAt:new Date().toISOString()}},{returnDocument:"after"});if(!n)return a.NextResponse.json({success:!1,error:"Note not found"},{status:404});let i={id:n._id.toString(),userId:n.userId,title:n.title,content:n.content,weather:n.weather,createdAt:n.createdAt,updatedAt:n.updatedAt};return a.NextResponse.json(i)}catch(e){return console.error("Failed to update note:",e),a.NextResponse.json({success:!1,error:"Failed to update note"},{status:500})}}async function x(e,{params:t}){try{let{userId:e}=(0,u.I)();if(!e)return a.NextResponse.json({success:!1,error:"Unauthorized"},{status:401});let r=await (0,d.v)(),o=await r.collection("notes").deleteOne({_id:new c.ObjectId(t.id),userId:e});if(0===o.deletedCount)return a.NextResponse.json({success:!1,error:"Note not found"},{status:404});return new a.NextResponse(null,{status:204})}catch(e){return console.error("Failed to delete note:",e),a.NextResponse.json({success:!1,error:"Failed to delete note"},{status:500})}}let f=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/notes/[id]/route",pathname:"/api/notes/[id]",filename:"route",bundlePath:"app/api/notes/[id]/route"},resolvedPagePath:"C:\\ai\\bnote\\src\\app\\api\\notes\\[id]\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:h,staticGenerationAsyncStorage:q,serverHooks:w,headerHooks:j,staticGenerationBailout:R}=f,g="/api/notes/[id]/route";function m(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:q})}},5419:(e,t,r)=>{e.exports=r(517)},8216:(e,t,r)=>{let o;r.d(t,{v:()=>i});var s=r(8013);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let n=process.env.MONGODB_URI;async function i(){return(await o).db()}o=new s.MongoClient(n,{}).connect()}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[904],()=>r(1874));module.exports=o})();